package main

import (
	"github.com/dn365/gin-zerolog"
	"github.com/gin-gonic/gin"
	"github.com/joho/godotenv"
	"github.com/rs/zerolog"
	zlog "github.com/rs/zerolog/log"
	swaggerFiles "github.com/swaggo/files"
	"github.com/swaggo/gin-swagger"
	"log"
	"os"

	"github.com/vipin030/automan/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/vipin030/automan/src/middleware"
	"github.com/vipin030/automan/src/controllers"
	"github.com/vipin030/automan/src/models"
)

// @title Swagger Example API
// @version 1.0
// @description This is a sample server celler server.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:3001
// @BasePath /api/v1
// @query.collection.format multi

func main() {
	// isConsole true
	zlog.Logger = zlog.Output(zerolog.ConsoleWriter{Out: os.Stderr})
	r := gin.Default()
	r.Use(ginzerolog.Logger("gin"))
	err := godotenv.Load()
	if err != nil {
		log.Fatal("Error loading .env file", err)
	}

	// Connect to database
	models.ConnectDatabase()

	docs.SwaggerInfo.Title = "Automan REST API"
	docs.SwaggerInfo.Description = "This is a sample localhost server."
	docs.SwaggerInfo.Version = "1.0"
	docs.SwaggerInfo.Host = "localhost:3001"
	docs.SwaggerInfo.BasePath = "/api/v1"
	docs.SwaggerInfo.Schemes = []string{"http", "https"}

	// Routes
	r.POST("/login", controllers.Authenticate)
	r.POST("/signup", controllers.CreateUserAccount)

	r.Use(middleware.TokenAuthMiddleware())
	v1 := r.Group("/api/v1")
	{
		vtypes := v1.Group("/vtypes")
		{
			vtypes.GET("", controllers.FindVehicleTypes)
			vtypes.GET(":id", controllers.FindVehicleType)
			vtypes.POST("", controllers.CreateVehicleType)
			vtypes.PATCH(":id", controllers.UpdateVehicleType)
			vtypes.DELETE(":id", controllers.DeleteVehicleType)
		}
	}
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	// Run the server
	r.Run(":8080")
}
